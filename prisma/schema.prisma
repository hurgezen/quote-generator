// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        String   @id @default(cuid())
  shorthand String
  name      String
  fullName  String?
  address   String?
  phone     String?
  email     String?
  website   String?
  vkn       String?
  vd        String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contacts  Contact[]
  quotes    Quote[]
}

model Contact {
  id         String   @id @default(uuid())
  name       String
  position   String?
  email      String
  phone      String?
  address    String?
  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([customerId, email])
}

model Quote {
  id               String      @id @default(cuid())
  quoteNumber      String      @unique
  status           QuoteStatus
  currency         String
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  validUntil       DateTime?
  customerId       String
  customer         Customer    @relation(fields: [customerId], references: [id])
  subtotal         Float
  discount         Float
  preTaxTotal      Float
  taxRate          Float
  totalTax         Float
  shippingHandling Float
  total            Float
  warrantyTerms    String
  deliveryTerms    String
  deliveryPlace    String
  paymentTerms     String
  vatIncluded      Boolean
  notes            String?
  preparedBy       String?
  lineItems        LineItem[]
}

model LineItem {
  id                String   @id @default(cuid())
  quoteId           String
  quote             Quote    @relation(fields: [quoteId], references: [id])
  partNumber        String
  description       String
  quantity          Int
  estimatedDelivery DateTime
  unitPrice         Float
  totalPrice        Float
  dealerPrice       Float
  listPrice         Float
  hsCode            String?
  taxes             Tax[]
}

model Tax {
  id         String   @id @default(cuid())
  lineItemId String
  lineItem   LineItem @relation(fields: [lineItemId], references: [id])
  name       String
  percentage Float
  amount     Float
}

enum QuoteStatus {
  DRAFT
  SENT
  ACCEPTED
  REJECTED
  MODIFIED
}

model CompanyInfo {
  id                String @id @default(cuid())
  name              String
  address           String
  phone             String
  email             String
  website           String?
  vat               Float
  bankInformation   String
  termsAndLiability String
}

model PriceList {
  id          String @id @default(cuid())
  partNumber  String @unique
  description String
  dealerPrice Float
  listPrice   Float
  hsCode      String
}

model Part {
  id           Int      @id @default(autoincrement())
  partNumber   String   @unique
  description  String
  listPrice    Float
  dealerPrice  Float
  currency     String
  tariffNumber String
}

model CsvMapping {
  id      Int      @id @default(autoincrement())
  name    String
  mapping String
}